// ---------------------------------------------------
// Code Snippets for Exercise:  Visualize Data
// ---------------------------------------------------

// ---------------------------------------------------   

      /*
       * Step: Construct a class breaks renderer
       */
      var cbrCountyPopDensity = new ClassBreaksRenderer(symDefault, "pop00_sqmi");


// ---------------------------------------------------

      /*
       * Step: Define the class breaks
       */
      cbrCountyPopDensity.addBreak({
        minValue : 0,
        maxValue : 10,
        symbol : new SimpleFillSymbol().setColor(new Color([254, 240, 217]))
      });
      cbrCountyPopDensity.addBreak({
        minValue : 10,
        maxValue : 100,
        symbol : new SimpleFillSymbol().setColor(new Color([253, 204, 138]))
      });
      cbrCountyPopDensity.addBreak({
        minValue : 100,
        maxValue : 1000,
        symbol : new SimpleFillSymbol().setColor(new Color([252, 141, 89]))
      });
      cbrCountyPopDensity.addBreak({
        minValue : 1000,
        maxValue : 10000,
        symbol : new SimpleFillSymbol().setColor(new Color([227, 74, 51]))
      });
      cbrCountyPopDensity.addBreak({
        minValue : 10000,
        maxValue : 100000,
        symbol : new SimpleFillSymbol().setColor(new Color([179, 0, 0]))
      });


// ---------------------------------------------------

      /*
       * Step: Apply the renderer to the Counties layer
       */
      var arrayLayerDrawingOptionsUSA = [];
      var layerDrawingOptionsCounties = new LayerDrawingOptions();
      layerDrawingOptionsCounties.renderer = cbrCountyPopDensity;
      arrayLayerDrawingOptionsUSA[3] = layerDrawingOptionsCounties;
      lyrUSA.setLayerDrawingOptions(arrayLayerDrawingOptionsUSA);


// ---------------------------------------------------
  

      /*
       * Step: Construct and apply a simple renderer for earthquake features
       */
      var quakeRenderer = new SimpleRenderer(quakeSymbol);
      lyrQuakes.setRenderer(quakeRenderer);




// ---------------------------------------------------

     

     /*
      * Step: Construct symbol size info parameters for the quake renderer
      */

       var sizeInfo = {
              field:"MAGNITUDE",
              valueUnit: "unknown",
              minSize:1,
              maxSize:50,
              minDataValue: 0,
              maxDataValue: 9
          };
   

// ---------------------------------------------------

   
     /*
      * Step:  Apply symbol size info to the quake renderer
      */
        quakeRenderer.setSizeInfo(sizeInfo);



// ---------------------------------------------------
// ---------------------------------------------------

